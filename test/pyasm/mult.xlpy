# vi: ft=python
from pyasm import *

eq  = load(nid="load-eq", uri=uri(name="eq", scope=pack("native")))
sub = load(nid="load-sub", uri=uri(name="usub", scope=pack("native")))
add = load(nid="load-add", uri=uri(name="uadd", scope=pack("native")))

i0  = arg(0, word(), nid="i0")
i1  = arg(1, word(), nid="i1")

# i1 == 0
q0  = const_word(0, nid="q0")
q1  = apply(func=eq, arg=i1, nid="q1")
q2  = apply(func=q1, arg=q0, nid="q2")

# f(i0, i1 - 1)
q3  = const_word(1, nid="q3")
q4  = apply(func=sub, arg=i1, nid="q4")
q5  = apply(func=q4, arg=q3, nid="q5")
q6  = graph_ref(word(), 1, nid="q6")
q7  = apply(func=q6, arg=i0, nid="q7")
q8  = apply(func=q7, arg=q5, nid="q8")

# i0 + f(i0, i1 - 1)
q9  = apply(func=add, arg=i0, nid="q9")
q10 = apply(func=q9, arg=q8, nid="q10")

# if i1 == 0 return 0 else return i0 + f(i0, i1 - 1)
q11 = cond(q2, q0, q10, terminal=True, nid="q11")


# f(10, 21)
r0  = const_word(10, nid="r0")
r1  = const_word(21, nid="r1")
r2  = graph_ref(word(), 1, nid="r2")
r3  = apply(r2, r0, nid="r3")
r4  = apply(r3, r1, terminal=True, nid="r4")

encode([
    graph([r0, r1, r2, r3, r4], -1),
    graph([
        i0, i1, eq, sub, add, q0, q1, q2, q3, q4,
        q5, q6, q7, q8, q9, q10, q11], -1),
],
expect=t(210, 0))
