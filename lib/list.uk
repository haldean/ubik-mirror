~ list
` *boolean

^ List a
    = Cons a (List a)
    = Nil

: append
    ^ List a -> a -> List a
    = \lst x -> ? lst {
        . Cons head tail => Cons head (append tail x)
        . Nil => Cons x Nil
    }

: contains
    ^ List a -> a -> Boolean
    = \lst x -> ? lst {
        . Cons head tail => (? {
            . eq head x => True
            .           => contains tail x
        })
        . Nil => False
    }

: humanize-list
    ^ List a -> List a
    = \lst -> {
        : rec = \x -> ? x {
            . Cons a xs => (
                concat (concat " " (humanize a)) (rec xs))
            . Nil => " "
        }
        ! concat "[" (concat (rec lst) "]")
    }

